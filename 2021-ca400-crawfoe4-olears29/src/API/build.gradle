buildscript {
    repositories {
        jcenter()
    }
    
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'kotlin'
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'application'
apply plugin: 'jacoco'

sourceCompatibility = 1.8

group 'com.API'
archivesBaseName = 'kotlin-gradle-jacoco'
version '0.0.1'
mainClassName = "io.ktor.server.netty.EngineMain"
mainClassName = 'com.API.src.ApplicationKt'
task stage {
    dependsOn installDist
}

repositories {
    mavenLocal()
    jcenter()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:1.5.0"
    implementation "io.ktor:ktor-server-netty:$ktor_version"
    implementation 'org.junit.jupiter:junit-jupiter:5.7.0'
    compile "io.ktor:ktor-gson:$ktor_version"
    compile("org.postgresql:postgresql:42.2.2")
    implementation "ch.qos.logback:logback-classic:$logback_version"
    testImplementation "io.ktor:ktor-server-tests:$ktor_version"
    implementation("io.ktor:ktor-jackson:$ktor_version")
    implementation("org.jetbrains.exposed:exposed:0.17.13")
    testImplementation(platform('org.junit:junit-bom:5.7.1'))
    testImplementation('org.junit.jupiter:junit-jupiter')
    testImplementation "io.mockk:mockk:1.11.0"
}

test {
    useJUnitPlatform()
    jacoco {
        destinationFile = file("${buildDir}/jacoco/test.exec")
    }
}

jacoco {
    // You may modify the Jacoco version here
    toolVersion = "0.8.2"
    reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
    // Adjust the output of the test report
    reports {
        xml.enabled false
        csv.enabled false
        html.destination layout.buildDirectory.dir('jacocoHtml').get().asFile
    }
}

test {
    finalizedBy jacocoTestReport // report is always generated after tests run
}


