<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="daoUtilsTest.LectureDaoUtilsTest" tests="12" skipped="0" failures="0" errors="0" timestamp="2021-05-06T14:31:53" hostname="DESKTOP-5QF4TQS" time="0.785">
  <properties/>
  <testcase name="testAttendanceToList()" classname="daoUtilsTest.LectureDaoUtilsTest" time="0.0"/>
  <testcase name="testBookingClashChecker_TwoClashes()" classname="daoUtilsTest.LectureDaoUtilsTest" time="0.514"/>
  <testcase name="testBookingClashChecker_NoLecture()" classname="daoUtilsTest.LectureDaoUtilsTest" time="0.004"/>
  <testcase name="testGetNextLecture()" classname="daoUtilsTest.LectureDaoUtilsTest" time="0.0"/>
  <testcase name="testReturnLecturesAfterNow()" classname="daoUtilsTest.LectureDaoUtilsTest" time="0.0"/>
  <testcase name="testAttendanceToString()" classname="daoUtilsTest.LectureDaoUtilsTest" time="0.0"/>
  <testcase name="testRegStudentForLectureCatchExceptionMarkedAsAttending()" classname="daoUtilsTest.LectureDaoUtilsTest" time="0.074"/>
  <testcase name="testRegStudentForLectureCatchExceptionNotRegistered()" classname="daoUtilsTest.LectureDaoUtilsTest" time="0.004"/>
  <testcase name="testRegStudentForLecture()" classname="daoUtilsTest.LectureDaoUtilsTest" time="0.169"/>
  <testcase name="testReturnLecturesAfterNowNull()" classname="daoUtilsTest.LectureDaoUtilsTest" time="0.0"/>
  <testcase name="testGetNextLectureNull()" classname="daoUtilsTest.LectureDaoUtilsTest" time="0.0"/>
  <testcase name="testBookingClashChecker_OneClash()" classname="daoUtilsTest.LectureDaoUtilsTest" time="0.003"/>
  <system-out><![CDATA[2021-05-06 15:31:53.231 [Test worker] DEBUG i.m.i.i.JvmStaticMockFactory - Creating object mockk for LectureDao
2021-05-06 15:31:53.231 [Test worker] TRACE i.m.i.i.JvmStaticMockFactory - Building object proxy for LectureDao hashcode=300713f9
2021-05-06 15:31:53.231 [Test worker] TRACE i.m.p.j.t.JvmInlineInstrumentation - Retransforming [Ljava.lang.Class;@6925edae
2021-05-06 15:31:53.408 [Test worker] TRACE io.mockk.proxy.jvm.ProxyMaker - Taking instance of class dao.LectureDao itself because it is final.
2021-05-06 15:31:53.408 [Test worker] TRACE io.mockk.proxy.jvm.ProxyMaker - Attaching to object mock for class dao.LectureDao
2021-05-06 15:31:53.409 [Test worker] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [LectureDao(object LectureDao)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2021-05-06 15:31:53.413 [Test worker] TRACE i.m.i.recording.CommonCallRecorder - Starting stubbing
2021-05-06 15:31:53.733 [Test worker] TRACE i.m.i.r.SignatureMatcherDetector - Matcher map: {}
2021-05-06 15:31:53.733 [Test worker] TRACE i.m.i.r.SignatureMatcherDetector - Processing call #0: getAllLecturesAtLocation(String)
2021-05-06 15:31:53.733 [Test worker] TRACE i.m.i.r.SignatureMatcherDetector - Signature for 0 argument of getAllLecturesAtLocation(String): [GLA.L101]
2021-05-06 15:31:53.734 [Test worker] TRACE i.m.i.r.SignatureMatcherDetector - Built matcher: LectureDao(object LectureDao).getAllLecturesAtLocation(eq(GLA.L101)))
2021-05-06 15:31:53.734 [Test worker] TRACE i.m.impl.recording.PermanentMocker - Mocked permanently: LectureDao(object LectureDao).getAllLecturesAtLocation(eq(GLA.L101))
2021-05-06 15:31:53.734 [Test worker] TRACE i.m.i.r.s.StubbingAwaitingAnswerState - Done stubbing. Still accepting additional answers
2021-05-06 15:31:53.735 [Test worker] DEBUG i.m.i.r.states.AnsweringState - Answering [Lecture(uuid=11c66b95-fb3b-41cd-9162-f801bf611ba3, courseCode=CASE4, moduleCode=CA4004, date=2021-02-01T12:00:00.000Z, endTime=2021-02-01T13:30:00.000Z, location=GLA.L101, type=lab, expectedAttendanceNumber=4, actualAttendanceNumber=0, expectedAttendance=[12345678, 12312312, 32132132, 87654321], actualAttendance=[12312312]), Lecture(uuid=7a86ccce-3c41-4eed-bdb9-6210da034646, courseCode=CASE4, moduleCode=CA4004, date=2021-02-01T12:30:00.000Z, endTime=2021-02-01T14:00:00.000Z, location=GLA.L101, type=lab, expectedAttendanceNumber=4, actualAttendanceNumber=0, expectedAttendance=[12345678, 12312312, 32132132, 87654321], actualAttendance=[12312312])] on LectureDao(object LectureDao).getAllLecturesAtLocation(GLA.L101)
2021-05-06 15:31:53.749 [Test worker] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [LectureDao(object LectureDao)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2021-05-06 15:31:53.750 [Test worker] TRACE i.m.i.recording.CommonCallRecorder - Starting stubbing
2021-05-06 15:31:53.751 [Test worker] TRACE i.m.i.r.SignatureMatcherDetector - Matcher map: {}
2021-05-06 15:31:53.751 [Test worker] TRACE i.m.i.r.SignatureMatcherDetector - Processing call #0: getAllLecturesAtLocation(String)
2021-05-06 15:31:53.751 [Test worker] TRACE i.m.i.r.SignatureMatcherDetector - Signature for 0 argument of getAllLecturesAtLocation(String): [GLA.L101]
2021-05-06 15:31:53.751 [Test worker] TRACE i.m.i.r.SignatureMatcherDetector - Built matcher: LectureDao(object LectureDao).getAllLecturesAtLocation(eq(GLA.L101)))
2021-05-06 15:31:53.751 [Test worker] TRACE i.m.impl.recording.PermanentMocker - Mocked permanently: LectureDao(object LectureDao).getAllLecturesAtLocation(eq(GLA.L101))
2021-05-06 15:31:53.751 [Test worker] TRACE i.m.i.r.s.StubbingAwaitingAnswerState - Done stubbing. Still accepting additional answers
2021-05-06 15:31:53.752 [Test worker] DEBUG i.m.i.r.states.AnsweringState - Answering [] on LectureDao(object LectureDao).getAllLecturesAtLocation(GLA.L101)
DEBUG:12345678, 12312312, 32132132, 876543212021-05-06 15:31:53.758 [Test worker] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [LectureDao(object LectureDao)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2021-05-06 15:31:53.759 [Test worker] TRACE i.m.i.recording.CommonCallRecorder - Starting stubbing
2021-05-06 15:31:53.761 [Test worker] TRACE i.m.i.i.AbstractMockFactory - Building proxy for Lecture hashcode=6fd89ce2
2021-05-06 15:31:53.761 [Test worker] TRACE i.m.p.j.t.JvmInlineInstrumentation - Retransforming [Ljava.lang.Class;@31ccff89
2021-05-06 15:31:53.816 [Test worker] TRACE io.mockk.proxy.jvm.ProxyMaker - Taking instance of class dataClasses.Lecture itself because it is final.
2021-05-06 15:31:53.816 [Test worker] TRACE io.mockk.proxy.jvm.ProxyMaker - Instantiating proxy for class dataClasses.Lecture via instantiator
2021-05-06 15:31:53.816 [Test worker] TRACE i.m.proxy.jvm.ObjenesisInstantiator - Creating new empty instance of class dataClasses.Lecture
2021-05-06 15:31:53.821 [Test worker] TRACE i.m.i.r.SignatureMatcherDetector - Matcher map: {}
2021-05-06 15:31:53.821 [Test worker] TRACE i.m.i.r.SignatureMatcherDetector - Processing call #0: getLecture(UUID)
2021-05-06 15:31:53.821 [Test worker] TRACE i.m.i.r.SignatureMatcherDetector - Signature for 0 argument of getLecture(UUID): [Ref(UUID@36464909)]
2021-05-06 15:31:53.822 [Test worker] TRACE i.m.i.r.SignatureMatcherDetector - Built matcher: LectureDao(object LectureDao).getLecture(eq(6bce0b81-7f34-495d-8e3e-bbdd1ed5a9ab)))
2021-05-06 15:31:53.823 [Test worker] TRACE i.m.impl.recording.PermanentMocker - Child search key: LectureDao(object LectureDao).getLecture(eq(6bce0b81-7f34-495d-8e3e-bbdd1ed5a9ab)))
2021-05-06 15:31:53.828 [Test worker] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Lecture name=child of object LectureDao#1
2021-05-06 15:31:53.829 [Test worker] TRACE i.m.i.i.AbstractMockFactory - Building proxy for Lecture hashcode=6fd89ce2
2021-05-06 15:31:53.829 [Test worker] TRACE io.mockk.proxy.jvm.ProxyMaker - Taking instance of class dataClasses.Lecture itself because it is final.
2021-05-06 15:31:53.829 [Test worker] TRACE io.mockk.proxy.jvm.ProxyMaker - Instantiating proxy for class dataClasses.Lecture via instantiator
2021-05-06 15:31:53.829 [Test worker] TRACE i.m.proxy.jvm.ObjenesisInstantiator - Creating new empty instance of class dataClasses.Lecture
2021-05-06 15:31:53.830 [Test worker] TRACE i.m.impl.recording.PermanentMocker - Mocked permanently: LectureDao(object LectureDao).getLecture(eq(6bce0b81-7f34-495d-8e3e-bbdd1ed5a9ab))
2021-05-06 15:31:53.830 [Test worker] TRACE i.m.i.r.s.StubbingAwaitingAnswerState - Done stubbing. Still accepting additional answers
2021-05-06 15:31:53.830 [Test worker] DEBUG i.m.i.r.states.AnsweringState - Answering Lecture(uuid=6bce0b81-7f34-495d-8e3e-bbdd1ed5a9ab, courseCode=CASE4, moduleCode=CA4004, date=2021-02-01T12:00:00.000Z, endTime=2021-02-01T13:30:00.000Z, location=GLA.L101, type=lab, expectedAttendanceNumber=4, actualAttendanceNumber=0, expectedAttendance=[12345678, 12312312, 32132132, 87654321], actualAttendance=[12312312]) on LectureDao(object LectureDao).getLecture(6bce0b81-7f34-495d-8e3e-bbdd1ed5a9ab)
2021-05-06 15:31:53.833 [Test worker] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [LectureDao(object LectureDao)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2021-05-06 15:31:53.835 [Test worker] TRACE i.m.i.recording.CommonCallRecorder - Starting stubbing
2021-05-06 15:31:53.835 [Test worker] TRACE i.m.i.i.AbstractMockFactory - Building proxy for Lecture hashcode=6fd89ce2
2021-05-06 15:31:53.835 [Test worker] TRACE io.mockk.proxy.jvm.ProxyMaker - Taking instance of class dataClasses.Lecture itself because it is final.
2021-05-06 15:31:53.835 [Test worker] TRACE io.mockk.proxy.jvm.ProxyMaker - Instantiating proxy for class dataClasses.Lecture via instantiator
2021-05-06 15:31:53.835 [Test worker] TRACE i.m.proxy.jvm.ObjenesisInstantiator - Creating new empty instance of class dataClasses.Lecture
2021-05-06 15:31:53.835 [Test worker] TRACE i.m.i.r.SignatureMatcherDetector - Matcher map: {}
2021-05-06 15:31:53.835 [Test worker] TRACE i.m.i.r.SignatureMatcherDetector - Processing call #0: getLecture(UUID)
2021-05-06 15:31:53.835 [Test worker] TRACE i.m.i.r.SignatureMatcherDetector - Signature for 0 argument of getLecture(UUID): [Ref(UUID@7bb132b1)]
2021-05-06 15:31:53.836 [Test worker] TRACE i.m.i.r.SignatureMatcherDetector - Built matcher: LectureDao(object LectureDao).getLecture(eq(5ab15271-f922-4b59-b0a7-9cb990b58251)))
2021-05-06 15:31:53.836 [Test worker] TRACE i.m.impl.recording.PermanentMocker - Child search key: LectureDao(object LectureDao).getLecture(eq(5ab15271-f922-4b59-b0a7-9cb990b58251)))
2021-05-06 15:31:53.836 [Test worker] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Lecture name=child of object LectureDao#2
2021-05-06 15:31:53.836 [Test worker] TRACE i.m.i.i.AbstractMockFactory - Building proxy for Lecture hashcode=6fd89ce2
2021-05-06 15:31:53.836 [Test worker] TRACE io.mockk.proxy.jvm.ProxyMaker - Taking instance of class dataClasses.Lecture itself because it is final.
2021-05-06 15:31:53.836 [Test worker] TRACE io.mockk.proxy.jvm.ProxyMaker - Instantiating proxy for class dataClasses.Lecture via instantiator
2021-05-06 15:31:53.836 [Test worker] TRACE i.m.proxy.jvm.ObjenesisInstantiator - Creating new empty instance of class dataClasses.Lecture
2021-05-06 15:31:53.836 [Test worker] TRACE i.m.impl.recording.PermanentMocker - Mocked permanently: LectureDao(object LectureDao).getLecture(eq(5ab15271-f922-4b59-b0a7-9cb990b58251))
2021-05-06 15:31:53.836 [Test worker] TRACE i.m.i.r.s.StubbingAwaitingAnswerState - Done stubbing. Still accepting additional answers
2021-05-06 15:31:53.837 [Test worker] DEBUG i.m.i.r.states.AnsweringState - Answering Lecture(uuid=5ab15271-f922-4b59-b0a7-9cb990b58251, courseCode=CASE4, moduleCode=CA4004, date=2021-02-01T12:00:00.000Z, endTime=2021-02-01T13:30:00.000Z, location=GLA.L101, type=lab, expectedAttendanceNumber=4, actualAttendanceNumber=0, expectedAttendance=[12345678, 12312312, 32132132, 87654321], actualAttendance=[12312312]) on LectureDao(object LectureDao).getLecture(5ab15271-f922-4b59-b0a7-9cb990b58251)
2021-05-06 15:31:53.838 [Test worker] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [LectureDao(object LectureDao)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2021-05-06 15:31:53.839 [Test worker] TRACE i.m.i.recording.CommonCallRecorder - Starting stubbing
2021-05-06 15:31:53.839 [Test worker] TRACE i.m.i.i.AbstractMockFactory - Building proxy for Lecture hashcode=6fd89ce2
2021-05-06 15:31:53.840 [Test worker] TRACE io.mockk.proxy.jvm.ProxyMaker - Taking instance of class dataClasses.Lecture itself because it is final.
2021-05-06 15:31:53.840 [Test worker] TRACE io.mockk.proxy.jvm.ProxyMaker - Instantiating proxy for class dataClasses.Lecture via instantiator
2021-05-06 15:31:53.840 [Test worker] TRACE i.m.proxy.jvm.ObjenesisInstantiator - Creating new empty instance of class dataClasses.Lecture
2021-05-06 15:31:53.840 [Test worker] TRACE i.m.i.r.SignatureMatcherDetector - Matcher map: {}
2021-05-06 15:31:53.840 [Test worker] TRACE i.m.i.r.SignatureMatcherDetector - Processing call #0: getLecture(UUID)
2021-05-06 15:31:53.840 [Test worker] TRACE i.m.i.r.SignatureMatcherDetector - Signature for 0 argument of getLecture(UUID): [Ref(UUID@3268f533)]
2021-05-06 15:31:53.840 [Test worker] TRACE i.m.i.r.SignatureMatcherDetector - Built matcher: LectureDao(object LectureDao).getLecture(eq(afea2fbe-9b94-4f49-9790-0f4adfa393d9)))
2021-05-06 15:31:53.840 [Test worker] TRACE i.m.impl.recording.PermanentMocker - Child search key: LectureDao(object LectureDao).getLecture(eq(afea2fbe-9b94-4f49-9790-0f4adfa393d9)))
2021-05-06 15:31:53.840 [Test worker] DEBUG i.m.i.i.AbstractMockFactory - Creating mockk for Lecture name=child of object LectureDao#3
2021-05-06 15:31:53.841 [Test worker] TRACE i.m.i.i.AbstractMockFactory - Building proxy for Lecture hashcode=6fd89ce2
2021-05-06 15:31:53.841 [Test worker] TRACE io.mockk.proxy.jvm.ProxyMaker - Taking instance of class dataClasses.Lecture itself because it is final.
2021-05-06 15:31:53.841 [Test worker] TRACE io.mockk.proxy.jvm.ProxyMaker - Instantiating proxy for class dataClasses.Lecture via instantiator
2021-05-06 15:31:53.841 [Test worker] TRACE i.m.proxy.jvm.ObjenesisInstantiator - Creating new empty instance of class dataClasses.Lecture
2021-05-06 15:31:53.841 [Test worker] TRACE i.m.impl.recording.PermanentMocker - Mocked permanently: LectureDao(object LectureDao).getLecture(eq(afea2fbe-9b94-4f49-9790-0f4adfa393d9))
2021-05-06 15:31:53.841 [Test worker] TRACE i.m.i.r.s.StubbingAwaitingAnswerState - Done stubbing. Still accepting additional answers
2021-05-06 15:31:53.841 [Test worker] DEBUG i.m.i.r.states.AnsweringState - Answering Lecture(uuid=afea2fbe-9b94-4f49-9790-0f4adfa393d9, courseCode=CASE4, moduleCode=CA4004, date=2021-02-01T12:00:00.000Z, endTime=2021-02-01T13:30:00.000Z, location=GLA.L101, type=lab, expectedAttendanceNumber=4, actualAttendanceNumber=0, expectedAttendance=[12345678, 12312312, 32132132, 87654321], actualAttendance=[12312312]) on LectureDao(object LectureDao).getLecture(afea2fbe-9b94-4f49-9790-0f4adfa393d9)
DEBUG:12312312, 123456782021-05-06 15:31:53.987 [Test worker] DEBUG Exposed - UPDATE lecture SET actual_attendance_number=2, actual_attendance='12312312, 12345678' WHERE lecture.uuid = 'afea2fbe-9b94-4f49-9790-0f4adfa393d9'
2021-05-06 15:31:53.988 [Test worker] DEBUG i.m.i.r.states.AnsweringState - Answering null on LectureDao(object LectureDao).updateLectureAttendance(afea2fbe-9b94-4f49-9790-0f4adfa393d9, [12312312, 12345678])
2021-05-06 15:31:53.993 [Test worker] TRACE i.m.i.recording.CommonCallRecorder - Starting verification
2021-05-06 15:31:53.995 [Test worker] TRACE i.m.i.r.SignatureMatcherDetector - Matcher map: {}
2021-05-06 15:31:53.995 [Test worker] TRACE i.m.i.r.SignatureMatcherDetector - Processing call #0: updateLectureAttendance(UUID, List)
2021-05-06 15:31:53.995 [Test worker] TRACE i.m.i.r.SignatureMatcherDetector - Signature for 0 argument of updateLectureAttendance(UUID, List): [Ref(UUID@3268f533)]
2021-05-06 15:31:53.995 [Test worker] TRACE i.m.i.r.SignatureMatcherDetector - Signature for 1 argument of updateLectureAttendance(UUID, List): [Ref(ArrayList@111be14)]
2021-05-06 15:31:53.995 [Test worker] TRACE i.m.i.r.SignatureMatcherDetector - Built matcher: LectureDao(object LectureDao).updateLectureAttendance(eq(afea2fbe-9b94-4f49-9790-0f4adfa393d9), eq([12312312, 12345678])))
2021-05-06 15:31:53.996 [Test worker] TRACE i.m.impl.recording.PermanentMocker - Mocked permanently: LectureDao(object LectureDao).updateLectureAttendance(eq(afea2fbe-9b94-4f49-9790-0f4adfa393d9), eq([12312312, 12345678]))
2021-05-06 15:31:54.006 [Test worker] TRACE i.m.i.r.states.RecordingState - Done verification. Outcome: OK(verifiedCalls=[LectureDao(object LectureDao).updateLectureAttendance(afea2fbe-9b94-4f49-9790-0f4adfa393d9, [12312312, 12345678])])
2021-05-06 15:31:54.011 [Test worker] DEBUG io.mockk.impl.stub.CommonClearer - Clearing [LectureDao(object LectureDao)] mocks ClearOptions(answers=true, recordedCalls=true, childMocks=true, verificationMarks=true, exclusionRules=true)
2021-05-06 15:31:54.012 [Test worker] TRACE i.m.i.recording.CommonCallRecorder - Starting stubbing
2021-05-06 15:31:54.013 [Test worker] TRACE i.m.i.r.SignatureMatcherDetector - Matcher map: {}
2021-05-06 15:31:54.013 [Test worker] TRACE i.m.i.r.SignatureMatcherDetector - Processing call #0: getAllLecturesAtLocation(String)
2021-05-06 15:31:54.013 [Test worker] TRACE i.m.i.r.SignatureMatcherDetector - Signature for 0 argument of getAllLecturesAtLocation(String): [GLA.L101]
2021-05-06 15:31:54.013 [Test worker] TRACE i.m.i.r.SignatureMatcherDetector - Built matcher: LectureDao(object LectureDao).getAllLecturesAtLocation(eq(GLA.L101)))
2021-05-06 15:31:54.013 [Test worker] TRACE i.m.impl.recording.PermanentMocker - Mocked permanently: LectureDao(object LectureDao).getAllLecturesAtLocation(eq(GLA.L101))
2021-05-06 15:31:54.013 [Test worker] TRACE i.m.i.r.s.StubbingAwaitingAnswerState - Done stubbing. Still accepting additional answers
2021-05-06 15:31:54.014 [Test worker] DEBUG i.m.i.r.states.AnsweringState - Answering [Lecture(uuid=e0dbfda8-64b8-42c5-9317-733e80c8a7e2, courseCode=CASE4, moduleCode=CA4004, date=2021-02-01T12:30:00.000Z, endTime=2021-02-01T14:00:00.000Z, location=GLA.L101, type=lab, expectedAttendanceNumber=4, actualAttendanceNumber=0, expectedAttendance=[12345678, 12312312, 32132132, 87654321], actualAttendance=[12312312])] on LectureDao(object LectureDao).getAllLecturesAtLocation(GLA.L101)
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
